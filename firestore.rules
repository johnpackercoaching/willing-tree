rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow authenticated users to read/write their own user document
    match /users/{userId} {
      // Allow read if user is authenticated and it's their document
      allow read: if request.auth != null && request.auth.uid == userId;
      
      // Allow create if user is authenticated and creating their own document
      allow create: if request.auth != null && request.auth.uid == userId;
      
      // Allow update if user is authenticated and updating their own document
      allow update: if request.auth != null && request.auth.uid == userId;
      
      // Never allow delete of user documents
      allow delete: if false;
    }
    
    // Allow authenticated users to query users collection for finding partners
    match /users/{userId} {
      allow get: if request.auth != null;
      allow list: if request.auth != null && request.query.limit <= 10;
    }
    
    // Allow authenticated users to read/write innermosts they're part of
    match /innermosts/{innermostId} {
      // Allow read if authenticated and part of the innermost
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.partnerA || 
         request.auth.uid == resource.data.partnerB);
      
      // Allow create if authenticated
      allow create: if request.auth != null;
      
      // Allow update if part of the innermost
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.partnerA || 
         request.auth.uid == resource.data.partnerB);
      
      // Allow delete if part of the innermost
      allow delete: if request.auth != null && 
        (request.auth.uid == resource.data.partnerA || 
         request.auth.uid == resource.data.partnerB);
    }
    
    // Allow authenticated users to read/write willing boxes they're part of
    match /willingBoxes/{boxId} {
      // Allow read if authenticated and part of the box
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.partnerA || 
         request.auth.uid == resource.data.partnerB);
      
      // Allow create if authenticated
      allow create: if request.auth != null;
      
      // Allow update if part of the box
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.partnerA || 
         request.auth.uid == resource.data.partnerB ||
         request.auth.uid == request.resource.data.partnerA || 
         request.auth.uid == request.resource.data.partnerB);
      
      // No delete for willing boxes
      allow delete: if false;
    }
    
    // Allow authenticated users to read/write their pairing invitations
    match /pairingInvitations/{inviteId} {
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.senderId || 
         request.auth.email == resource.data.recipientEmail);
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.senderId;
      allow update: if request.auth != null && 
        request.auth.email == resource.data.recipientEmail;
      allow delete: if request.auth != null && 
        request.auth.uid == resource.data.senderId;
    }
    
    // Email and SMS queues (for cloud functions)
    match /emailQueue/{document} {
      allow create: if request.auth != null;
      allow read: if false;
      allow update: if false;
      allow delete: if false;
    }
    
    match /smsQueue/{document} {
      allow create: if request.auth != null;
      allow read: if false;
      allow update: if false;
      allow delete: if false;
    }
  }
}